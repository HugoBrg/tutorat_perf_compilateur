//Hugo BERANGER - M2 MIAGE IA

use ndarray::prelude::*;

fn main() {
    let matrice1: Array2::<i32> = array![
        [5 ,5 ,1 ,1 ,2 ,0 ,0 ,7 ,0 ,3],
        [5 ,5 ,3 ,8 ,6 ,1 ,2 ,4 ,1 ,4],
        [1 ,9 ,1 ,3 ,5 ,7 ,0 ,7 ,8 ,6],
        [2 ,2 ,8 ,9 ,2 ,4 ,8 ,7 ,4 ,5],
        [2 ,7 ,4 ,8 ,5 ,1 ,7 ,8 ,1 ,8],
        [2 ,9 ,6 ,5 ,2 ,3 ,5 ,3 ,1 ,3],
        [1 ,5 ,1 ,1 ,6 ,6 ,4 ,4 ,1 ,5],
        [8 ,2 ,3 ,9 ,9 ,7 ,7 ,5 ,6 ,3],
        [5 ,8 ,6 ,4 ,5 ,0 ,2 ,0 ,3 ,6],
        [3 ,4 ,3 ,9 ,8 ,8 ,4 ,6 ,9 ,5]];
    
    let matrice2: Array2::<i32> = array![
        [6 ,2 ,9 ,9 ,8 ,6 ,3 ,6 ,5 ,4],
        [1 ,4 ,0 ,9 ,6 ,9 ,3 ,2 ,6 ,6],
        [6 ,9 ,0 ,2 ,2 ,7 ,6 ,5 ,9 ,8],
        [3 ,0 ,3 ,1 ,9 ,1 ,8 ,7 ,0 ,5],
        [2 ,0 ,7 ,6 ,7 ,6 ,1 ,5 ,3 ,9],
        [3 ,0 ,1 ,2 ,6 ,1 ,6 ,3 ,8 ,8],
        [8 ,1 ,2 ,6 ,8 ,3 ,8 ,8 ,3 ,2],
        [3 ,1 ,6 ,3 ,9 ,7 ,8 ,9 ,8 ,4],
        [8 ,7 ,7 ,0 ,8 ,2 ,7 ,6 ,1 ,1],
        [0 ,7 ,2 ,5 ,8 ,0 ,9 ,9 ,2 ,4]];

    let mut produit = Array2::<i32>::zeros((10,10));

    let mut temp: i32 = 0;

    for x in 0..10 {
        for y in 0..10 {
            for z in 0..10 {
                temp = temp + matrice1[[x,z]] * matrice2[[z,y]];
            }
            produit[[x,y]] = temp;
            temp = 0;
        }
    }

    // println!("produit {}", produit)
}